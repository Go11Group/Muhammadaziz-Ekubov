// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: WeatherServise.proto

package weather_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GCWRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *GCWRequest) Reset() {
	*x = GCWRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCWRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCWRequest) ProtoMessage() {}

func (x *GCWRequest) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCWRequest.ProtoReflect.Descriptor instead.
func (*GCWRequest) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{0}
}

func (x *GCWRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type GCWResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Humidity    int32  `protobuf:"varint,2,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
	Temperature string `protobuf:"bytes,3,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	WindMPH     string `protobuf:"bytes,4,opt,name=WindMPH,proto3" json:"WindMPH,omitempty"`
}

func (x *GCWResponse) Reset() {
	*x = GCWResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCWResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCWResponse) ProtoMessage() {}

func (x *GCWResponse) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCWResponse.ProtoReflect.Descriptor instead.
func (*GCWResponse) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{1}
}

func (x *GCWResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *GCWResponse) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *GCWResponse) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *GCWResponse) GetWindMPH() string {
	if x != nil {
		return x.WindMPH
	}
	return ""
}

type GWFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=City,proto3" json:"City,omitempty"`
	Days int32  `protobuf:"varint,2,opt,name=Days,proto3" json:"Days,omitempty"`
}

func (x *GWFRequest) Reset() {
	*x = GWFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GWFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GWFRequest) ProtoMessage() {}

func (x *GWFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GWFRequest.ProtoReflect.Descriptor instead.
func (*GWFRequest) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{2}
}

func (x *GWFRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GWFRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GWFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature string `protobuf:"bytes,1,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	Time        string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	WindMPH     string `protobuf:"bytes,3,opt,name=WindMPH,proto3" json:"WindMPH,omitempty"`
	Humidity    int32  `protobuf:"varint,4,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
}

func (x *GWFResponse) Reset() {
	*x = GWFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GWFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GWFResponse) ProtoMessage() {}

func (x *GWFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GWFResponse.ProtoReflect.Descriptor instead.
func (*GWFResponse) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{3}
}

func (x *GWFResponse) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *GWFResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *GWFResponse) GetWindMPH() string {
	if x != nil {
		return x.WindMPH
	}
	return ""
}

func (x *GWFResponse) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type RWCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country     string `protobuf:"bytes,1,opt,name=Country,proto3" json:"Country,omitempty"`
	City        string `protobuf:"bytes,2,opt,name=City,proto3" json:"City,omitempty"`
	Time        string `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
	Temperature string `protobuf:"bytes,4,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	WindMPH     string `protobuf:"bytes,5,opt,name=WindMPH,proto3" json:"WindMPH,omitempty"`
	Humidity    int32  `protobuf:"varint,6,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
}

func (x *RWCRequest) Reset() {
	*x = RWCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RWCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RWCRequest) ProtoMessage() {}

func (x *RWCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RWCRequest.ProtoReflect.Descriptor instead.
func (*RWCRequest) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{4}
}

func (x *RWCRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *RWCRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RWCRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *RWCRequest) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *RWCRequest) GetWindMPH() string {
	if x != nil {
		return x.WindMPH
	}
	return ""
}

func (x *RWCRequest) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type RWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReported bool `protobuf:"varint,1,opt,name=isReported,proto3" json:"isReported,omitempty"`
}

func (x *RWSResponse) Reset() {
	*x = RWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WeatherServise_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RWSResponse) ProtoMessage() {}

func (x *RWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_WeatherServise_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RWSResponse.ProtoReflect.Descriptor instead.
func (*RWSResponse) Descriptor() ([]byte, []int) {
	return file_WeatherServise_proto_rawDescGZIP(), []int{5}
}

func (x *RWSResponse) GetIsReported() bool {
	if x != nil {
		return x.IsReported
	}
	return false
}

var File_WeatherServise_proto protoreflect.FileDescriptor

var file_WeatherServise_proto_rawDesc = []byte{
	0x0a, 0x14, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x20, 0x0a, 0x0a, 0x47, 0x43, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x22, 0x79, 0x0a, 0x0b, 0x47, 0x43, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x4d, 0x50, 0x48, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x4d, 0x50, 0x48, 0x22, 0x34, 0x0a,
	0x0a, 0x47, 0x57, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x44,
	0x61, 0x79, 0x73, 0x22, 0x79, 0x0a, 0x0b, 0x47, 0x57, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64,
	0x4d, 0x50, 0x48, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x4d,
	0x50, 0x48, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xa6,
	0x01, 0x0a, 0x0a, 0x52, 0x57, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x4d, 0x50, 0x48, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x4d, 0x50, 0x48, 0x12, 0x1a, 0x0a, 0x08, 0x48,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0x2d, 0x0a, 0x0b, 0x52, 0x57, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x32, 0xdc, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x14,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x43, 0x57, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x43, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x57, 0x46,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x57, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x57, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x57, 0x53, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_WeatherServise_proto_rawDescOnce sync.Once
	file_WeatherServise_proto_rawDescData = file_WeatherServise_proto_rawDesc
)

func file_WeatherServise_proto_rawDescGZIP() []byte {
	file_WeatherServise_proto_rawDescOnce.Do(func() {
		file_WeatherServise_proto_rawDescData = protoimpl.X.CompressGZIP(file_WeatherServise_proto_rawDescData)
	})
	return file_WeatherServise_proto_rawDescData
}

var file_WeatherServise_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_WeatherServise_proto_goTypes = []interface{}{
	(*GCWRequest)(nil),  // 0: genproto.GCWRequest
	(*GCWResponse)(nil), // 1: genproto.GCWResponse
	(*GWFRequest)(nil),  // 2: genproto.GWFRequest
	(*GWFResponse)(nil), // 3: genproto.GWFResponse
	(*RWCRequest)(nil),  // 4: genproto.RWCRequest
	(*RWSResponse)(nil), // 5: genproto.RWSResponse
}
var file_WeatherServise_proto_depIdxs = []int32{
	0, // 0: genproto.WeatherService.GetCurrentWeather:input_type -> genproto.GCWRequest
	2, // 1: genproto.WeatherService.GetWeatherForecast:input_type -> genproto.GWFRequest
	4, // 2: genproto.WeatherService.ReportWeatherCondition:input_type -> genproto.RWCRequest
	1, // 3: genproto.WeatherService.GetCurrentWeather:output_type -> genproto.GCWResponse
	3, // 4: genproto.WeatherService.GetWeatherForecast:output_type -> genproto.GWFResponse
	5, // 5: genproto.WeatherService.ReportWeatherCondition:output_type -> genproto.RWSResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_WeatherServise_proto_init() }
func file_WeatherServise_proto_init() {
	if File_WeatherServise_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_WeatherServise_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCWRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WeatherServise_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCWResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WeatherServise_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GWFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WeatherServise_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GWFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WeatherServise_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RWCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WeatherServise_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_WeatherServise_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_WeatherServise_proto_goTypes,
		DependencyIndexes: file_WeatherServise_proto_depIdxs,
		MessageInfos:      file_WeatherServise_proto_msgTypes,
	}.Build()
	File_WeatherServise_proto = out.File
	file_WeatherServise_proto_rawDesc = nil
	file_WeatherServise_proto_goTypes = nil
	file_WeatherServise_proto_depIdxs = nil
}
